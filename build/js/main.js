"use strict";

var cells = document.querySelectorAll('.cell');
var statusText = document.getElementById('status');
var restartBtn = document.getElementById('restart');
var overlay = document.querySelector(".overlay");
var board = ['', '', '', '', '', '', '', '', ''];
var isComputerX = true; // Чередує роль комп'ютера між X та O
var currentPlayer, computerPlayer;
var winningCombos = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];
function initializeGame() {
  currentPlayer = isComputerX ? 'O' : 'X';
  computerPlayer = isComputerX ? 'X' : 'O';
  board = ['', '', '', '', '', '', '', '', ''];
  cells.forEach(function (cell) {
    cell.textContent = '';
    cell.classList.remove('taken');
  });
  statusText.textContent = "\u0412\u0430\u0448 \u0445\u0456\u0434 (".concat(currentPlayer, ")");
  if (currentPlayer === computerPlayer) {
    setTimeout(bestMove, 500);
  }
}
function checkWinner(player) {
  return winningCombos.some(function (combo) {
    return combo.every(function (index) {
      return board[index] === player;
    });
  });
}
function isDraw() {
  return board.every(function (cell) {
    return cell !== '';
  });
}
function bestMove() {
  var bestScore = -Infinity;
  var move;
  for (var i = 0; i < board.length; i++) {
    if (board[i] === '') {
      board[i] = computerPlayer;
      var score = minimax(board, 0, false);
      board[i] = '';
      if (score > bestScore) {
        bestScore = score;
        move = i;
      }
    }
  }
  board[move] = computerPlayer;
  cells[move].textContent = computerPlayer;
  cells[move].classList.add('taken');
  if (checkWinner(computerPlayer)) {
    statusText.textContent = "\u041A\u043E\u043C\u043F'\u044E\u0442\u0435\u0440 (".concat(computerPlayer, ") \u0432\u0438\u0433\u0440\u0430\u0432!");
    showPopup("._lose");
    endGame();
  } else if (isDraw()) {
    statusText.textContent = "Нічия!";
    showPopup("._draw");
  } else {
    currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
    statusText.textContent = "\u0412\u0430\u0448 \u0445\u0456\u0434 (".concat(currentPlayer, ")");
  }
}
function minimax(board, depth, isMaximizing) {
  if (checkWinner(computerPlayer)) return 10 - depth; // Комп'ютер виграв
  if (checkWinner(currentPlayer)) return depth - 10; // Гравець виграв
  if (isDraw()) return 0; // Нічия

  if (isMaximizing) {
    var bestScore = -Infinity;
    for (var i = 0; i < board.length; i++) {
      if (board[i] === '') {
        board[i] = computerPlayer;
        var score = minimax(board, depth + 1, false);
        board[i] = '';
        bestScore = Math.max(score, bestScore);
      }
    }
    return bestScore;
  } else {
    var _bestScore = Infinity;
    for (var _i = 0; _i < board.length; _i++) {
      if (board[_i] === '') {
        board[_i] = currentPlayer;
        var _score = minimax(board, depth + 1, true);
        board[_i] = '';
        _bestScore = Math.min(_score, _bestScore);
      }
    }
    return _bestScore;
  }
}
function handleCellClick(e) {
  var cell = e.target;
  var index = cell.dataset.index;
  if (board[index] === '' && currentPlayer !== computerPlayer) {
    board[index] = currentPlayer;
    cell.textContent = currentPlayer;
    cell.classList.add('taken');
    if (checkWinner(currentPlayer)) {
      statusText.textContent = "\u0412\u0438 (".concat(currentPlayer, ") \u0432\u0438\u0433\u0440\u0430\u043B\u0438!");
      showPopup("._win");
      endGame();
    } else if (isDraw()) {
      statusText.textContent = "Нічия!";
    } else {
      currentPlayer = computerPlayer;
      statusText.textContent = "\u0425\u0456\u0434 \u043A\u043E\u043C\u043F'\u044E\u0442\u0435\u0440\u0430 (".concat(computerPlayer, ")");
      setTimeout(bestMove, 500);
    }
  }
}
function endGame() {
  cells.forEach(function (cell) {
    return cell.classList.add('taken');
  });
}
restartBtn.addEventListener('click', function () {
  isComputerX = !isComputerX; // Чередуємо ролі
  initializeGame();
});
cells.forEach(function (cell) {
  return cell.addEventListener('click', handleCellClick);
});
initializeGame();
function showPopup(popup) {
  console.log(popup);
  popup = overlay.querySelector(popup);
  overlay.classList.remove("opacity");
  popup.classList.remove("hide");
}
function hidePopup(popup) {
  popup = overlay.querySelector(popup);
  overlay.classList.add("opacity");
  popup.classList.add("hide");
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
