"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
//TDS
(function () {
  var url = new URL(window.location.href);
  var params = ['l', 'utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'param1', 'param2', 'param3', 'param4', 'creative_type', 'creative_id'];
  var linkParams = ['affid', 'cpaid']; // ищем в url redirectUrl в url:

  if (url.searchParams.has('redirectUrl')) {
    var redirectUrl = new URL(url.searchParams.get('redirectUrl'));
    if (redirectUrl.href.match(/\//g).length === 4 && redirectUrl.searchParams.get('l')) {
      //если ссылка в ссылка redirectUrl корректная
      localStorage.setItem('redirectUrl', redirectUrl.href); // указываем точкой входа домен с протоколом из redirectUrl
    }
  }

  params.forEach(function (param) {
    if (url.searchParams.has(param)) localStorage.setItem(param, url.searchParams.get(param));
  });
  linkParams.forEach(function (linkParam) {
    if (url.searchParams.has(linkParam)) localStorage.setItem(linkParam, url.searchParams.get(linkParam));
  });
  window.addEventListener('click', function (e) {
    var link,
      parent = e.target.closest('a');
    if (parent.getAttribute('href') !== 'https://tds.favbet.partners') {
      return;
    }
    if (parent) {
      e.preventDefault();
      var affid = localStorage.getItem('affid');
      var cpaid = localStorage.getItem('cpaid');
      if (localStorage.getItem("redirectUrl")) {
        link = new URL(localStorage.getItem("redirectUrl"));
      } else {
        link = new URL(parent.href);
        if (affid && cpaid) {
          link.pathname = '/' + affid + '/' + cpaid;
        }
      }
      params.forEach(function (param) {
        if (url.searchParams.has(param)) {
          link.searchParams.set(param, localStorage.getItem(param));
        }
      });
      document.location.href = link;
    }
  });
})();
var cells = document.querySelectorAll('.cell');
var statusText = document.getElementById('status');
var statusTextInfo = document.getElementById('status-text');
var statusContainer = document.querySelector(".land__left");
var statusBox = document.querySelector(".land__status");
var restartBtns = document.querySelectorAll('.restart-game');
var overlay = document.querySelector(".overlay");
var sideBtns = document.querySelectorAll('.side-btn');
var startGame = document.querySelector('.start-game');
var gameContainer = document.getElementById('game');
var landWrapper = document.querySelector('.land');
var statusIconX = document.querySelector('[data-player="X"]');
var statusIconO = document.querySelector('[data-player="O"]');
var gameGrid = document.querySelector('.game-grid');
var persLeft = document.querySelector('.game-pers._left');
var persRight = document.querySelector('.game-pers._right');
var gameOverText = document.querySelector('.game-over');
var board = ['', '', '', '', '', '', '', '', ''];
var isComputerX = true;
var currentPlayer, computerPlayer;
document.body.style.overflow = "hidden";
if (isComputerX) {
  document.querySelector('[data-side="X"]').classList.remove('_active');
  document.querySelector('[data-side="0"]').classList.add('_active');
} else {
  document.querySelector('[data-side="0"]').classList.remove('_active');
  document.querySelector('[data-side="X"]').classList.add('_active');
}
var winningCombos = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];
function initializeGame() {
  currentPlayer = isComputerX ? 'Гравець 02' : 'Гравець 01';
  computerPlayer = isComputerX ? 'Гравець 01' : 'Гравець 02';
  board = ['', '', '', '', '', '', '', '', ''];
  cells.forEach(function (cell) {
    cell.textContent = '';
    cell.classList.remove('taken', 'X-player', 'O-player');
  });
  var line = document.querySelector('.win-line');
  if (line) {
    line.style.transform = 'scaleX(0)';
  }
  checkStatusContainer(currentPlayer);
  checkStatusIcon(currentPlayer);
  statusText.textContent = "".concat(currentPlayer);
  statusTextInfo.textContent = "\u0422\u0412\u0406\u0419_\u0425\u0406\u0414";
  if (currentPlayer === computerPlayer) {
    setTimeout(bestMove, 500);
  }
}
function checkStatusIcon(player) {
  if (player === 'Гравець 01') {
    statusIconX.classList.add("_active");
    statusIconO.classList.remove("_active");
  }
  if (player === 'Гравець 02') {
    statusIconO.classList.add("_active");
    statusIconX.classList.remove("_active");
  }
}
function checkStatusContainer(player) {
  if (player === 'Гравець 01') {
    statusBox.classList.add("X-player");
    statusBox.classList.remove("O-player");
  }
  if (player === 'Гравець 02') {
    statusBox.classList.add("O-player");
    statusBox.classList.remove("X-player");
  }
}
function checkWinner(player) {
  var _iterator = _createForOfIteratorHelper(winningCombos),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var combo = _step.value;
      if (combo.every(function (index) {
        return board[index] === player;
      })) {
        return combo;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return null;
}
function isDraw() {
  return board.every(function (cell) {
    return cell !== '';
  });
}
function bestMove() {
  setTimeout(function () {
    var bestScore = -Infinity;
    var move;
    for (var i = 0; i < board.length; i++) {
      if (board[i] === '') {
        board[i] = computerPlayer;
        var score = minimax(board, 0, false);
        board[i] = '';
        if (score > bestScore) {
          bestScore = score;
          move = i;
        }
      }
    }
    board[move] = computerPlayer;
    if (computerPlayer === "Гравець 02") {
      cells[move].classList.add('O-player');
    }
    if (computerPlayer === "Гравець 01") {
      cells[move].classList.add('X-player');
    }
    checkStatusIcon(computerPlayer);
    checkStatusContainer(currentPlayer);
    statusTextInfo.textContent = "\u0427\u0415\u041A\u0410\u0419";
    cells[move].classList.add('taken');
    var winningCombo = checkWinner(computerPlayer);
    if (winningCombo) {
      showWinLine(winningCombo);
      setTimeout(function () {
        statusText.textContent = "".concat(computerPlayer);
        hideAfterGame("lose");
        endGame();
      }, 500);
    } else if (isDraw()) {
      hideAfterGame("draw");
      statusText.textContent = "Нічия!";
    } else {
      setTimeout(function () {
        currentPlayer = currentPlayer === 'Гравець 01' ? 'Гравець 02' : 'Гравець 01';
        checkStatusIcon(currentPlayer);
        checkStatusContainer(currentPlayer);
        statusTextInfo.textContent = "\u0422\u0412\u0406\u0419_\u0425\u0406\u0414";
        statusText.textContent = "".concat(currentPlayer);
      }, 1500);
    }
  }, 1000);
}
function minimax(board, depth, isMaximizing) {
  if (checkWinner(computerPlayer)) return 10 - depth;
  if (checkWinner(currentPlayer)) return depth - 10;
  if (isDraw()) return 0;
  if (isMaximizing) {
    var bestScore = -Infinity;
    for (var i = 0; i < board.length; i++) {
      if (board[i] === '') {
        board[i] = computerPlayer;
        var score = minimax(board, depth + 1, false);
        board[i] = '';
        bestScore = Math.max(score, bestScore);
      }
    }
    return bestScore;
  } else {
    var _bestScore = Infinity;
    for (var _i = 0; _i < board.length; _i++) {
      if (board[_i] === '') {
        board[_i] = currentPlayer;
        var _score = minimax(board, depth + 1, true);
        board[_i] = '';
        _bestScore = Math.min(_score, _bestScore);
      }
    }
    return _bestScore;
  }
}
function handleCellClick(e) {
  var cell = e.target;
  var index = cell.dataset.index;
  if (board[index] === '' && currentPlayer !== computerPlayer) {
    board[index] = currentPlayer;
    if (currentPlayer === "Гравець 02") {
      cell.classList.add('O-player');
    }
    if (currentPlayer === "Гравець 01") {
      cell.classList.add('X-player');
    }
    cell.classList.add('taken');
    var winningCombo = checkWinner(currentPlayer);
    if (winningCombo) {
      showWinLine(winningCombo);
      setTimeout(function () {
        statusText.textContent = "".concat(currentPlayer);
        hideAfterGame("win");
        endGame();
      }, 500);
    } else if (isDraw()) {
      setTimeout(function () {
        hideAfterGame("draw");
        statusText.textContent = "Нічия!";
      }, 500);
    } else {
      setTimeout(function () {
        statusText.textContent = "".concat(computerPlayer);
      }, 1500);
      currentPlayer = computerPlayer;
      setTimeout(bestMove, 500);
    }
  }
}
function hideAfterGame(winner) {
  gameContainer.style.opacity = "0";
  gameGrid.style.opacity = "0";
  statusBox.classList.remove("O-player", "X-player");
  persLeft.style.transform = "translateX(220%)";
  persRight.style.transform = "translateX(-220%) scale(-1, 1)";
  if (winner === "lose") {
    gameOverText.textContent = "не пощастило!";
  }
  if (winner === "win") {
    gameOverText.textContent = "ти переміг!";
  }
  if (winner === "draw") {
    gameOverText.textContent = "ти був на рівні!";
  }
  setTimeout(function () {
    gameOverText.classList.remove("opacity");
    setTimeout(function () {
      if (winner === "draw") {
        showPopup("._draw");
      }
      if (winner === "win") {
        showPopup("._win");
      }
      if (winner === "lose") {
        showPopup("._lose");
      }
    }, 200);
  }, 200);
}
function endGame() {
  cells.forEach(function (cell) {
    return cell.classList.add('taken');
  });
}
restartBtns.forEach(function (btn) {
  btn.addEventListener('click', function () {
    isComputerX = !isComputerX;
    initializeGame();
    gameOverText.textContent = "";
    gameGrid.style.opacity = "1";
    gameContainer.style.opacity = "1";
    persLeft.style.transform = "translateX(0%)";
    persRight.style.transform = "translateX(0%) scale(-1, 1)";
    sideBtns.forEach(function (btn) {
      btn.classList.remove("_active");
      startGame.classList.add("disabled");
      btn.addEventListener('click', function () {
        startGame.classList.remove("disabled");
        var side = btn.dataset.side;
        isComputerX = side !== 'X';
        sideBtns.forEach(function (item) {
          return item.classList.remove('_active');
        });
        btn.classList.add('_active');
      });
    });

    // document.body.style.overflow = "auto";
    document.querySelectorAll(".popup").forEach(function (popup) {
      if (popup.classList.contains('_start')) {
        popup.classList.remove('hide-popup');
        popup.classList.remove('hide');
        popup.style.opacity = "1";
      } else {
        popup.classList.add('hide-popup');
      }
    });
  });
});
cells.forEach(function (cell) {
  return cell.addEventListener('click', handleCellClick);
});
sideBtns.forEach(function (btn) {
  btn.addEventListener('click', function () {
    var side = btn.dataset.side;
    isComputerX = side !== 'X';
    sideBtns.forEach(function (item) {
      return item.classList.remove('_active');
    });
    btn.classList.add('_active');
  });
});
startGame.addEventListener('click', function () {
  document.getElementById('side-selection').style.opacity = '0';
  gameContainer.style.opacity = '1';
  landWrapper.classList.add("_decor");
  document.body.style.overflow = "auto";
  setTimeout(function () {
    enableMouseScale(document.querySelector('.decor'));
  }, 2500);
  initializeGame();
  hidePopup("#side-selection");
});
function showPopup(popup) {
  setTimeout(function () {
    popup = overlay.querySelector(popup);
    overlay.classList.remove("opacity");
    document.body.style.overflow = "hidden";
    setTimeout(function () {
      popup.classList.remove("hide-popup");
    }, 500);
  }, 2000);
}
function hidePopup(popup) {
  popup = overlay.querySelector(popup);
  overlay.classList.add("opacity");
  popup.classList.add("hide");
}
function enableMouseScale(element) {
  var minScale = 1;
  var maxScale = 1.05;
  element.style.transition = 'transform 0.1s ease';
  document.addEventListener('mousemove', function (e) {
    var rect = element.getBoundingClientRect();
    var x = e.clientX - rect.left;
    var y = e.clientY - rect.top;
    var centerX = rect.width / 2;
    var centerY = rect.height / 2;
    var distance = Math.hypot(x - centerX, y - centerY);
    var maxDistance = Math.hypot(centerX, centerY);
    var scale = minScale + (1 - distance / maxDistance) * (maxScale - minScale);
    element.style.transform = "scale(".concat(Math.min(maxScale, Math.max(minScale, scale)), ")");
  });
  element.addEventListener('mouseleave', function () {
    element.style.transform = "scale(".concat(minScale, ")");
  });
}
function showWinLine(combo) {
  var line = document.querySelector('.win-line');
  line.style.transform = 'scaleX(0)';
  // line.style.width = '100%';
  // line.style.height = '44px';
  // line.style.background = '#00f0ff';

  var positions = {
    '0,1,2': {
      top: '26%',
      left: '50%',
      rotate: '0deg',
      width: '80%'
    },
    '3,4,5': {
      top: '52%',
      left: '50%',
      rotate: '0deg',
      width: '80%'
    },
    '6,7,8': {
      top: '78.33%',
      left: '50%',
      rotate: '0deg',
      width: '80%'
    },
    '0,3,6': {
      top: '50%',
      left: '24.5%',
      rotate: '90deg',
      width: '80%'
    },
    '1,4,7': {
      top: '50%',
      left: '50%',
      rotate: '90deg',
      width: '80%'
    },
    '2,5,8': {
      top: '50%',
      left: '76.5%',
      rotate: '90deg',
      width: '80%'
    },
    '0,4,8': {
      top: '50%',
      left: '50%',
      rotate: '45deg',
      width: '100%'
    },
    '2,4,6': {
      top: '50%',
      left: '50%',
      rotate: '-45deg',
      width: '100%'
    }
  };
  var key = combo.sort(function (a, b) {
    return a - b;
  }).join(',');
  var pos = positions[key];
  var width = pos.width;
  if (pos) {
    line.style.top = pos.top;
    line.style.left = pos.left;
    line.style.transform = "translate(-50%, -50%) rotate(".concat(pos.rotate, ") scaleX(1)");
    line.style.width = "".concat(pos.width);
    line.style.opacity = "1";
  }
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
